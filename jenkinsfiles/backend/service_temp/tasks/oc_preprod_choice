#!/usr/bin/env groovy
// Choose to patch or to rollout

pipeline {
    agent { 
		label 'preprod'
		}
	options {
		buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
		timestamps()
	}
	parameters {
		string(
				name: 'NEWTAG',
				defaultValue: "release",
				description: "Установить из тега:"
		)
	}
    stages {
        stage("Choose role version") {
            steps {
                script {
					// get current deploy version
					sh "oc describe dc/service_temp -n projectname | grep Image | cut -d':' -f4 | tr -d '\n' > ${WORKSPACE}/current_version.txt"
					env.CURRENT = readFile (file: "${WORKSPACE}/current_version.txt")
					echo " +++++++++++++++++++++++++++++++++++++++++"
					echo "Current version is: ${env.CURRENT}"		
					echo "Choosen version is: ${params.NEWTAG}"		
                    echo " +++++++++++++++++++++++++++++++++++++++++"
					
					
					
					if ( params.NEWTAG == env.CURRENT ) {
                         build job: "oc_preprod_deployer",
                         parameters:  [string(name: 'TAG', value: params.NEWTAG)]
                         currentBuild.description = "Запускается редеплой в среду PREPROD"
                         echo " =========== Запускается редеплой на стенд PREPROD"
                     } else {
                         build job: "oc_preprod_patcher",
                         parameters:  [string(name: 'TAG', value: params.NEWTAG)]
                         currentBuild.description = "Запускается патч в среду PREPROD"
                         echo " =========== Запускается патч на стенд PREPROD"
					}
				}
			}
		}
	}
}